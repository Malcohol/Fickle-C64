
TILE_SOURCE:

TILE_CORNER_TR = (* - TILE_SOURCE) / 12 
	.byte CHR_GAP, CHR_GAP, CHR_GAP, CHR_CORNER_TR | BG_WALL_EDGE
	.byte CHR_GAP, CHR_GAP, CHR_GAP, CHR_GAP
	.byte CHR_GAP, CHR_GAP, CHR_GAP, CHR_GAP

TILE_CORNER_BL = (* - TILE_SOURCE) / 12 
	.byte CHR_GAP, CHR_GAP, CHR_GAP, CHR_GAP
	.byte CHR_CORNER_BL | BG_WALL_TOP, CHR_GAP, CHR_GAP, CHR_GAP
	.byte CHR_GAP, CHR_GAP, CHR_GAP, CHR_GAP

TILE_CORNER_TL = (* - TILE_SOURCE) / 12 
	.byte CHR_CORNER_TL | BG_WALL_EDGE, CHR_GAP, CHR_GAP, CHR_GAP
	.byte CHR_GAP, CHR_GAP, CHR_GAP, CHR_GAP
	.byte CHR_GAP, CHR_GAP, CHR_GAP, CHR_GAP

TILE_CORNER_BR = (* - TILE_SOURCE) / 12 
	.byte CHR_GAP, CHR_GAP, CHR_GAP, CHR_GAP
	.byte CHR_GAP, CHR_GAP, CHR_GAP, CHR_CORNER_BR | BG_WALL_TOP
	.byte CHR_GAP, CHR_GAP, CHR_GAP, CHR_GAP

TILE_CLOCKWISE = (* - TILE_SOURCE) / 12 
	.byte CHR_ROTOR_TL, CHR_CLOCKWISE_0, CHR_CLOCKWISE_1, CHR_ROTOR_TR
	.byte CHR_CLOCKWISE_2, CHR_CLOCKWISE_3, CHR_CLOCKWISE_4, CHR_CLOCKWISE_5
	.byte CHR_ROTOR_BL, CHR_CLOCKWISE_6, CHR_CLOCKWISE_7, CHR_ROTOR_BR

TILE_ANTICLOCKWISE = (* - TILE_SOURCE) / 12 
	.byte CHR_ROTOR_TL, CHR_ANTICLOCKWISE_0, CHR_ANTICLOCKWISE_1, CHR_ROTOR_TR
	.byte CHR_ANTICLOCKWISE_2, CHR_ANTICLOCKWISE_3, CHR_ANTICLOCKWISE_4, CHR_ANTICLOCKWISE_5
	.byte CHR_ROTOR_BL, CHR_ANTICLOCKWISE_6, CHR_ANTICLOCKWISE_7, CHR_ROTOR_BR

TILE_KEY = (* - TILE_SOURCE) / 12 
	.byte CHR_GAP, CHR_GAP, CHR_GAP, CHR_GAP
	.byte CHR_GAP, CHR_KEY_LEFT, CHR_KEY_RIGHT, CHR_GAP
	.byte CHR_GAP, CHR_GAP, CHR_GAP, CHR_GAP

TILE_SWITCH = (* - TILE_SOURCE) / 12 
	.byte CHR_GAP, CHR_LEVER_T, CHR_LEVER_T, CHR_GAP
	.byte CHR_LEVER_BL | BG_OTHER, CHR_LEVER_BM | BG_OTHER, CHR_LEVER_BM | BG_OTHER, CHR_LEVER_BR | BG_OTHER
	.byte CHR_GAP, CHR_GAP, CHR_GAP, CHR_GAP

TILE_HEART = (* - TILE_SOURCE) / 12 
	.byte CHR_CORNER_TL, CHR_CORNER_TR, CHR_CORNER_TL, CHR_CORNER_TR
	.byte CHR_HEART_LEFT, CHR_BLOCK, CHR_BLOCK, CHR_HEART_RIGHT
	.byte CHR_ROTOR_BL, CHR_HEART_BOTTOM_LEFT, CHR_HEART_BOTTOM_RIGHT, CHR_ROTOR_BR

TILE_TELEPORT = (* - TILE_SOURCE) / 12 
	.byte CHR_TELEPORT_0 | BG_OTHER, CHR_TELEPORT_1 | BG_OTHER, CHR_TELEPORT_2 | BG_OTHER, CHR_TELEPORT_3 | BG_OTHER
	.byte CHR_TELEPORT_4 | BG_OTHER, CHR_TELEPORT_5 | BG_OTHER, CHR_TELEPORT_6 | BG_OTHER, CHR_TELEPORT_7 | BG_OTHER
	.byte CHR_TELEPORT_8 | BG_OTHER, CHR_TELEPORT_9 | BG_OTHER, CHR_TELEPORT_A | BG_OTHER, CHR_TELEPORT_B | BG_OTHER

TILE_BLOCK = (* - TILE_SOURCE) / 12 
	.byte CHR_BLOCK, CHR_BLOCK, CHR_BLOCK, CHR_BLOCK
	.byte CHR_BLOCK, CHR_BLOCK, CHR_BLOCK, CHR_BLOCK
	.byte CHR_BLOCK, CHR_BLOCK, CHR_BLOCK, CHR_BLOCK

TILE_GAP = (* - TILE_SOURCE) / 12 
	.byte CHR_GAP, CHR_GAP, CHR_GAP, CHR_GAP
	.byte CHR_GAP, CHR_GAP, CHR_GAP, CHR_GAP
	.byte CHR_GAP, CHR_GAP, CHR_GAP, CHR_GAP

TILE_BADDY = (* - TILE_SOURCE) / 12 
	.byte CHR_GAP, CHR_GAP, CHR_GAP, CHR_GAP
	.byte CHR_GAP, CHR_GAP, CHR_GAP, CHR_GAP
	.byte CHR_GAP, CHR_GAP, CHR_GAP, CHR_GAP

TILE_PLAYER = (* - TILE_SOURCE) / 12 
	.byte CHR_GAP, CHR_GAP, CHR_GAP, CHR_GAP
	.byte CHR_GAP, CHR_GAP, CHR_GAP, CHR_GAP
	.byte CHR_GAP, CHR_GAP, CHR_GAP, CHR_GAP

TILE_COLOUR_SOURCE:

TILE_COLOUR_CORNER_TR = (* - TILE_COLOUR_SOURCE) / 12 
	.byte FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR
	.byte FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR 
	.byte FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR 

TILE_COLOUR_CORNER_BL = (* - TILE_COLOUR_SOURCE) / 12 
	.byte FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR
	.byte FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR 
	.byte FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR 

TILE_COLOUR_CORNER_TL = (* - TILE_COLOUR_SOURCE) / 12 
	.byte FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR
	.byte FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR 
	.byte FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR

TILE_COLOUR_CORNER_BR = (* - TILE_COLOUR_SOURCE) / 12 
	.byte FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR
	.byte FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR 
	.byte FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR

TILE_COLOUR_CLOCKWISE = (* - TILE_COLOUR_SOURCE) / 12 
	.byte ROTOR_COLOUR, ROTOR_COLOUR, ROTOR_COLOUR, ROTOR_COLOUR
	.byte ROTOR_COLOUR, ROTOR_COLOUR, ROTOR_COLOUR, ROTOR_COLOUR
	.byte ROTOR_COLOUR, ROTOR_COLOUR, ROTOR_COLOUR, ROTOR_COLOUR

TILE_COLOUR_ANTICLOCKWISE = (* - TILE_COLOUR_SOURCE) / 12 
	.byte ROTOR_COLOUR, ROTOR_COLOUR, ROTOR_COLOUR, ROTOR_COLOUR
	.byte ROTOR_COLOUR, ROTOR_COLOUR, ROTOR_COLOUR, ROTOR_COLOUR
	.byte ROTOR_COLOUR, ROTOR_COLOUR, ROTOR_COLOUR, ROTOR_COLOUR

TILE_COLOUR_KEY = (* - TILE_COLOUR_SOURCE) / 12 
	.byte FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR
	.byte FLOOR_COLOUR, KEY_COLOUR, KEY_COLOUR, FLOOR_COLOUR
	.byte FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR

TILE_COLOUR_SWITCH = (* - TILE_COLOUR_SOURCE) / 12 
	.assert TILE_SWITCH = TILE_COLOUR_SWITCH, error, "Tile order mismatch"
	.byte FLOOR_COLOUR, LEVER_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR
	.byte LEVER_COLOUR, LEVER_COLOUR, LEVER_COLOUR, LEVER_COLOUR
	.byte FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR

TILE_COLOUR_HEART = (* - TILE_COLOUR_SOURCE) / 12 
	.assert TILE_HEART = TILE_COLOUR_HEART, error, "Tile order mismatch"
	.byte HEART_COLOUR, HEART_COLOUR, HEART_COLOUR, HEART_COLOUR
	.byte HEART_COLOUR, HEART_COLOUR, HEART_COLOUR, HEART_COLOUR
	.byte HEART_COLOUR, HEART_COLOUR, HEART_COLOUR, HEART_COLOUR

TILE_COLOUR_TELEPORT = (* - TILE_COLOUR_SOURCE) / 12 
	.assert TILE_TELEPORT = TILE_COLOUR_TELEPORT, error, "Tile order mismatch"
	.byte TELEPORT_COLOUR, TELEPORT_COLOUR, TELEPORT_COLOUR, TELEPORT_COLOUR
	.byte TELEPORT_COLOUR, TELEPORT_COLOUR, TELEPORT_COLOUR, TELEPORT_COLOUR
	.byte TELEPORT_COLOUR, TELEPORT_COLOUR, TELEPORT_COLOUR, TELEPORT_COLOUR

TILE_COLOUR_BLOCK = (* - TILE_COLOUR_SOURCE) / 12 
	.assert TILE_BLOCK = TILE_COLOUR_BLOCK, error, "Tile order mismatch"
	.byte WALL_TOP_COLOUR, WALL_TOP_COLOUR, WALL_TOP_COLOUR, WALL_TOP_COLOUR
	.byte WALL_TOP_COLOUR, WALL_TOP_COLOUR, WALL_TOP_COLOUR, WALL_TOP_COLOUR
	.byte WALL_TOP_COLOUR, WALL_TOP_COLOUR, WALL_TOP_COLOUR, WALL_TOP_COLOUR

TILE_COLOUR_GAP = (* - TILE_COLOUR_SOURCE) / 12 
	.assert TILE_GAP = TILE_COLOUR_GAP, error, "Tile order mismatch"
	.byte FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR
	.byte FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR
	.byte FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR

TILE_COLOUR_BADDY = (* - TILE_COLOUR_SOURCE) / 12 
	.byte FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR
	.byte FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR
	.byte FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR

TILE_COLOUR_PLAYER = (* - TILE_COLOUR_SOURCE) / 12 
	.byte FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR
	.byte FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR
	.byte FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR, FLOOR_COLOUR



